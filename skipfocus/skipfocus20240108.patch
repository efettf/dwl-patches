diff --git a/config.def.h b/config.def.h
index a784eb4..5d3a4f9 100644
--- a/config.def.h
+++ b/config.def.h
@@ -21,10 +21,11 @@ static const float fullscreen_bg[]         = {0.1f, 0.1f, 0.1f, 1.0f}; /* You ca
 static int log_level = WLR_ERROR;
 
 static const Rule rules[] = {
-	/* app_id             title       tags mask     isfloating   monitor */
+	/* app_id               title       tags mask     isfloating   skipfocus monitor */
 	/* examples: */
-	{ "Gimp_EXAMPLE",     NULL,       0,            1,           -1 }, /* Start on currently visible tags floating, not tiled */
-	{ "firefox_EXAMPLE",  NULL,       1 << 8,       0,           -1 }, /* Start on ONLY tag "9" */
+	{ "Gimp_EXAMPLE",       NULL,       0,            1,           0,        -1 }, /* Start on currently visible tags floating, not tiled */
+	{ "firefox_EXAMPLE",  	NULL,       1 << 8,       0,           0,        -1 }, /* Start on ONLY tag "9" */
+	{ "mako_EXAMPLE",	    NULL,       0,            1,           1,        -1 }, /* Start floating and skip focus
 };
 
 /* layout(s) */
diff --git a/dwl.c b/dwl.c
index 6f041a0..90ac57b 100644
--- a/dwl.c
+++ b/dwl.c
@@ -137,7 +137,7 @@ typedef struct {
 #endif
 	unsigned int bw;
 	uint32_t tags;
-	int isfloating, isurgent, isfullscreen;
+	int isfloating, isurgent, isfullscreen, skipfocus;
 	uint32_t resize; /* configure serial of a pending resize */
 } Client;
 
@@ -228,6 +228,7 @@ typedef struct {
 	const char *title;
 	uint32_t tags;
 	int isfloating;
+	int skipfocus;
 	int monitor;
 } Rule;
 
@@ -464,6 +465,7 @@ applyrules(Client *c)
 		if ((!r->title || strstr(title, r->title))
 				&& (!r->id || strstr(appid, r->id))) {
 			c->isfloating = r->isfloating;
+			c->skipfocus = r->skipfocus;
 			newtags |= r->tags;
 			i = 0;
 			wl_list_for_each(m, &mons, link) {
@@ -1307,6 +1309,13 @@ focusclient(Client *c, int lift)
 	if (locked)
 		return;
 
+	if (c && c->skipfocus != 0){
+		if (c -> skipfocus == 1) {
+			c->skipfocus = 0;
+		}
+		return;
+	}
+
 	/* Raise client in stacking order if requested */
 	if (c && lift)
 		wlr_scene_node_raise_to_top(&c->scene->node);
